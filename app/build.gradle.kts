/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("org.openjfx.javafxplugin") version "0.1.0"
}

// Project/Module information
description = "team4-RTFM-projekt2-electriscan"
group = "ch.zhaw.it23a.pm2"
version = "2024"



repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)
    //Needed for mockito
    implementation("org.objenesis:objenesis:3.3")
    implementation("net.bytebuddy:byte-buddy:1.14.13")
    testImplementation("net.bytebuddy:byte-buddy-agent:1.14.13")
    testImplementation("org.mockito:mockito-core:5.11.0")

    //Junits for Junit 5
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")


    // This dependency is used by the application.
    implementation(libs.guava)
    implementation("org.json:json:20240303")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

javafx {
    version = "21.0.2"
    modules("javafx.controls", "javafx.fxml")
}

application {
    // Define the main class for the application.
    mainClass = "ch.zhaw.it23a.pm2.Main"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
